# -*- coding = utf-8 -*-

"""
分而治之（divide and conquer，D&C）
    将原问题分解为几个规模较小但类似于原问题的子问题，
    递归地求解这些子问题，然后在合并这些子问题的解来建立原问题的解

解决问题: 如何将一块地均匀地分成方块，并确保分出的方块是最大的？
1.找出基线条件，尽可能简单
2.不断将问题分解（或说缩小规模），直到符合基线条件
    基线条件：一条边的长度是另一条边的整数倍。如 50*25的，划分成 2块 25*25的
    递归条件：按照最大边进行划分，分出的最小块地，再按照最大边划分，分出最小块地....

"""
# D&C算法应用
def sum_num(arr):
    """
    对给定数组进行求和
    :param arr:
    :return:
    """